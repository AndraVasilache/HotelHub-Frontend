{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/mira/Desktop/hotelhub_frontend/node_modules/react-native-form-component/src/components/Form.tsx\";\nimport React, { Children, useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { containsError } from \"./FormItem\";\nimport { colors } from \"../colors\";\nexport var submitForm;\nexport default function Form(props) {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      width = _useState2[0],\n      setWidth = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      opacity = _useState4[0],\n      setOpacity = _useState4[1];\n\n  var handleButtonPress = function handleButtonPress() {\n    var fieldsWithError = [];\n    Children.forEach(props.children, function (child, index) {\n      var _child$ref, _child$ref$current;\n\n      if (child && ((_child$ref = child.ref) == null ? void 0 : (_child$ref$current = _child$ref.current) == null ? void 0 : _child$ref$current.getComponent()) == 'FormItem') {\n        var _child$props = child.props,\n            keyboardType = _child$props.keyboardType,\n            isRequired = _child$props.isRequired,\n            value = _child$props.value,\n            customValidation = _child$props.customValidation;\n        var validation;\n        if (customValidation) validation = customValidation();\n\n        if (containsError(keyboardType, isRequired, value, validation).status) {\n          var _child$ref2;\n\n          fieldsWithError.push(child.props.label || child.props.placeholder || 'FormItem' + index);\n          (_child$ref2 = child.ref) == null ? void 0 : _child$ref2.current.setState();\n        }\n      }\n    });\n\n    if (fieldsWithError.length) {\n      console.error('The following fields do not fulfil their conditions:\\n' + JSON.stringify(fieldsWithError, null, 2));\n      return;\n    }\n\n    props.onButtonPress();\n  };\n\n  submitForm = handleButtonPress;\n  return React.createElement(KeyboardAvoidingView, {\n    keyboardVerticalOffset: Platform.OS == 'ios' ? props.keyboardVerticalOffset || 50 : undefined,\n    behavior: Platform.OS == 'ios' ? 'padding' : undefined,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, props.children, React.createElement(Pressable, {\n    style: [styles.button, Platform.OS == 'ios' ? {\n      opacity: opacity\n    } : undefined, props.buttonStyle],\n    onPress: handleButtonPress,\n    android_ripple: {\n      color: 'lightgrey',\n      radius: width\n    },\n    onLayout: function onLayout(event) {\n      return setWidth(event.nativeEvent.layout.width);\n    },\n    onPressIn: function onPressIn() {\n      return setOpacity(0.5);\n    },\n    onPressOut: function onPressOut() {\n      return setOpacity(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: [styles.buttonText, props.buttonTextStyle],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, props.buttonText || 'Submit')));\n}\nvar styles = StyleSheet.create({\n  button: {\n    height: 48,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.red,\n    borderRadius: 8,\n    marginVertical: 32\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["/home/mira/Desktop/hotelhub_frontend/node_modules/react-native-form-component/src/components/Form.tsx"],"names":["React","Children","useState","containsError","colors","submitForm","Form","props","width","setWidth","opacity","setOpacity","handleButtonPress","fieldsWithError","forEach","children","child","index","ref","current","getComponent","keyboardType","isRequired","value","customValidation","validation","status","push","label","placeholder","setState","length","console","error","JSON","stringify","onButtonPress","Platform","OS","keyboardVerticalOffset","undefined","styles","button","buttonStyle","color","radius","event","nativeEvent","layout","buttonText","buttonTextStyle","StyleSheet","create","height","justifyContent","alignItems","backgroundColor","red","borderRadius","marginVertical","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { Children, useState } from 'react';\nimport {\n  KeyboardAvoidingView,\n  Platform,\n  Pressable,\n  Text,\n  StyleSheet,\n  TextInputSubmitEditingEventData,\n  NativeSyntheticEvent,\n} from 'react-native';\n\nimport { containsError } from './FormItem';\nimport { colors } from '../colors';\n\ninterface Props {\n  children: Element | Element[];\n  keyboardVerticalOffset?: number;\n  buttonText?: string;\n  buttonStyle?: object | object[];\n  buttonTextStyle?: object | object[];\n  onButtonPress: () => void;\n}\n\nexport let submitForm: (\n  e?: NativeSyntheticEvent<TextInputSubmitEditingEventData>\n) => void;\n\nexport default function Form(props: Props) {\n  const [width, setWidth] = useState(0);\n  const [opacity, setOpacity] = useState(1);\n\n  const handleButtonPress = () => {\n    const fieldsWithError: string[] = [];\n    Children.forEach(props.children, (child, index) => {\n      //@ts-ignore\n      if (child && child.ref?.current?.getComponent() == 'FormItem') {\n        const {\n          keyboardType,\n          isRequired,\n          value,\n          customValidation,\n          //@ts-ignore\n        } = child.props;\n        let validation;\n\n        if (customValidation) validation = customValidation();\n        if (containsError(keyboardType, isRequired, value, validation).status) {\n          fieldsWithError.push(\n            //@ts-ignore\n            child.props.label || child.props.placeholder || 'FormItem' + index\n          );\n          //@ts-ignore\n          child.ref?.current.setState();\n        }\n      }\n    });\n\n    if (fieldsWithError.length) {\n      console.error(\n        'The following fields do not fulfil their conditions:\\n' +\n          JSON.stringify(fieldsWithError, null, 2)\n      );\n      return;\n    }\n\n    props.onButtonPress();\n  };\n  submitForm = handleButtonPress;\n\n  return (\n    <KeyboardAvoidingView\n      keyboardVerticalOffset={\n        Platform.OS == 'ios' ? props.keyboardVerticalOffset || 50 : undefined\n      }\n      behavior={Platform.OS == 'ios' ? 'padding' : undefined}\n    >\n      {props.children}\n      <Pressable\n        style={[\n          styles.button,\n          Platform.OS == 'ios' ? { opacity } : undefined,\n          props.buttonStyle,\n        ]}\n        onPress={handleButtonPress}\n        android_ripple={{ color: 'lightgrey', radius: width }}\n        onLayout={(event) => setWidth(event.nativeEvent.layout.width)}\n        onPressIn={() => setOpacity(0.5)}\n        onPressOut={() => setOpacity(1)}\n      >\n        <Text style={[styles.buttonText, props.buttonTextStyle]}>\n          {props.buttonText || 'Submit'}\n        </Text>\n      </Pressable>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    height: 48,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.red,\n    borderRadius: 8,\n    marginVertical: 32,\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}