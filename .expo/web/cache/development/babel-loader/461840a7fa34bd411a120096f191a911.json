{"ast":null,"code":"var validate = function validate(fields) {\n  var arrErrors = fields.map(function (_ref) {\n    var type = _ref.type,\n        value = _ref.value,\n        name = _ref.name,\n        label = _ref.label,\n        required = _ref.required;\n    var errors = {};\n\n    switch (type) {\n      case 'email':\n        if (!value) {\n          errors[name] = 'Email address is required';\n        } else if (!/\\S+@\\S+\\.\\S+/.test(value)) {\n          errors[name] = 'Email address is invalid';\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    if (required) {\n      if (!value) {\n        errors[name] = label + \" is required\";\n      }\n    }\n\n    return errors;\n  });\n  debugger;\n  return arrErrors.reduce(function (objs, o) {\n    return o;\n  }, {});\n};\n\nexport default validate;","map":{"version":3,"sources":["/home/mira/Desktop/hotelhub_frontend/node_modules/react-native-form4u/src/components/Form4u/FormItems/defaultValidations.js"],"names":["validate","fields","arrErrors","map","type","value","name","label","required","errors","test","reduce","objs","o"],"mappings":"AAMA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,MAAD,EAAY;AAC3B,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAP,CAAW,gBAEvB;AAAA,QADJC,IACI,QADJA,IACI;AAAA,QADEC,KACF,QADEA,KACF;AAAA,QADSC,IACT,QADSA,IACT;AAAA,QADeC,KACf,QADeA,KACf;AAAA,QADsBC,QACtB,QADsBA,QACtB;AACJ,QAAMC,MAAM,GAAG,EAAf;;AAEA,YAAQL,IAAR;AACE,WAAK,OAAL;AACE,YAAI,CAACC,KAAL,EAAY;AACVI,UAAAA,MAAM,CAACH,IAAD,CAAN,GAAe,2BAAf;AACD,SAFD,MAEO,IAAI,CAAC,eAAeI,IAAf,CAAoBL,KAApB,CAAL,EAAiC;AACtCI,UAAAA,MAAM,CAACH,IAAD,CAAN,GAAe,0BAAf;AACD;;AACD;;AAEF;AACE;AAVJ;;AAaA,QAAIE,QAAJ,EAAc;AACZ,UAAI,CAACH,KAAL,EAAY;AACVI,QAAAA,MAAM,CAACH,IAAD,CAAN,GAAkBC,KAAlB;AACD;AACF;;AAED,WAAOE,MAAP;AACD,GAzBiB,CAAlB;AA2BA;AAEA,SAAOP,SAAS,CAACS,MAAV,CAAiB,UAACC,IAAD,EAAOC,CAAP;AAAA,WAAaA,CAAb;AAAA,GAAjB,EAAiC,EAAjC,CAAP;AACD,CA/BD;;AAiCA,eAAeb,QAAf","sourcesContent":["/**\n *\n * This file contains default validations for fields by type\n * Return a object with errors by field.\n */\n\nconst validate = (fields) => {\n  const arrErrors = fields.map(({\n    type, value, name, label, required,\n  }) => {\n    const errors = {};\n\n    switch (type) {\n      case 'email':\n        if (!value) {\n          errors[name] = 'Email address is required';\n        } else if (!/\\S+@\\S+\\.\\S+/.test(value)) {\n          errors[name] = 'Email address is invalid';\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    if (required) {\n      if (!value) {\n        errors[name] = `${label} is required`;\n      }\n    }\n\n    return errors;\n  });\n\n  debugger;\n\n  return arrErrors.reduce((objs, o) => o, {});\n};\n\nexport default validate;\n"]},"metadata":{},"sourceType":"module"}