{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/mira/Desktop/hotelhub_frontend/node_modules/react-native-form-component/src/components/FormItem.tsx\";\n\nimport React, { forwardRef, useState, useImperativeHandle, useRef } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Label from \"../components/Label\";\nimport { colors } from \"../colors\";\nvar FormItem = forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useState = useState({\n    status: false,\n    message: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasError = _useState2[0],\n      setHasError = _useState2[1];\n\n  var isRequired = props.isRequired,\n      value = props.value,\n      keyboardType = props.keyboardType;\n  var inputRef = useRef();\n  useImperativeHandle(ref, function () {\n    return {\n      setState: function setState() {\n        var validation;\n        if (props.customValidation) validation = props.customValidation();\n        setHasError(containsError(keyboardType, isRequired, value, validation));\n      },\n      focus: function focus() {\n        return inputRef.current.focus();\n      },\n      blur: function blur() {\n        return inputRef.current.blur();\n      },\n      clear: function clear() {\n        return inputRef.current.clear();\n      },\n      isFocused: function isFocused() {\n        return inputRef.current.isFocused();\n      },\n      getComponent: function getComponent() {\n        return 'FormItem';\n      }\n    };\n  });\n\n  var handleBlur = function handleBlur(e) {\n    var validation;\n    if (props.customValidation) validation = props.customValidation();\n    setHasError(containsError(keyboardType, isRequired, value, validation));\n    if (props.onBlur) props.onBlur(e);\n  };\n\n  var handleFocus = function handleFocus(e) {\n    setHasError({\n      status: false,\n      message: ''\n    });\n    if (props.onFocus) props.onFocus(e);\n  };\n\n  return React.createElement(React.Fragment, null, props.label && React.createElement(Label, {\n    text: props.label,\n    style: [styles.label, !props.asterik ? {\n      marginLeft: 4\n    } : undefined, props.labelStyle],\n    asterik: props.asterik,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: [styles.wrapper, props.style, hasError.status ? {\n      borderColor: colors.red,\n      borderWidth: 1\n    } : undefined],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, children, React.createElement(TextInput, _extends({}, props, {\n    style: [styles.inputText, props.textInputStyle],\n    ref: inputRef,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    value: props.value,\n    autoCapitalize: props.autoCapitalize || (props.keyboardType == 'email-address' ? 'none' : undefined),\n    maxLength: props.maxLength || 150,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })), hasError.status && React.createElement(View, {\n    style: styles.errorWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.exclamation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"!\"))), hasError.status && React.createElement(Text, {\n    style: [styles.underneathText, props.underneathTextStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, props.underneathText || hasError.message));\n});\n\nvar validateEmail = function validateEmail(email) {\n  return /^\\S+@\\S+\\.\\S+$/.test(email);\n};\n\nvar validateNumber = function validateNumber(number) {\n  return /^\\d+$/.test(number);\n};\n\nvar validateDecimalNumber = function validateDecimalNumber(number) {\n  return /^\\d+.*\\d*/.test(number) && !number.endsWith('.');\n};\n\nvar validatePhoneNumber = function validatePhoneNumber(number) {\n  return /^\\+{0,1}\\d+$/.test(number.replace(/ /g, ''));\n};\n\nexport var containsError = function containsError() {\n  var keyboardType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'default';\n  var isRequired = arguments.length > 1 ? arguments[1] : undefined;\n  var value = arguments.length > 2 ? arguments[2] : undefined;\n  var extraValidation = arguments.length > 3 ? arguments[3] : undefined;\n\n  if (extraValidation && !extraValidation.status) {\n    return {\n      status: true,\n      message: extraValidation.message\n    };\n  } else if (extraValidation && extraValidation.status) {\n    return {\n      status: false,\n      message: ''\n    };\n  }\n\n  if (keyboardType == 'email-address' && !validateEmail(value)) return {\n    status: true,\n    message: 'Enter a valid email'\n  };\n  if (isRequired && !value) return {\n    status: true,\n    message: 'Cannot be empty'\n  };\n  if (keyboardType == 'number-pad' || keyboardType == 'numeric' && !validateNumber(value)) return {\n    status: true,\n    message: 'Invalid number'\n  };\n  if (keyboardType == 'phone-pad' && !validatePhoneNumber(value)) return {\n    status: true,\n    message: 'Invalid phone number'\n  };\n  if (keyboardType == 'decimal-pad' && !validateDecimalNumber(value)) return {\n    status: true,\n    message: 'Invalid number'\n  };\n  return {\n    status: false,\n    message: ''\n  };\n};\nvar styles = StyleSheet.create({\n  wrapper: {\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 5,\n    paddingHorizontal: 8,\n    minHeight: 48,\n    alignItems: 'center',\n    marginBottom: 24\n  },\n  inputText: {\n    flex: 1,\n    paddingVertical: 8\n  },\n  underneathText: {\n    marginTop: -24,\n    marginLeft: 8,\n    marginBottom: 24,\n    color: colors.red\n  },\n  label: {\n    marginBottom: 2\n  },\n  errorWrapper: {\n    height: 30,\n    width: 30,\n    borderRadius: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.red\n  },\n  exclamation: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold'\n  }\n});\nexport default FormItem;","map":{"version":3,"sources":["/home/mira/Desktop/hotelhub_frontend/node_modules/react-native-form-component/src/components/FormItem.tsx"],"names":["React","forwardRef","useState","useImperativeHandle","useRef","Label","colors","FormItem","ref","children","props","status","message","hasError","setHasError","isRequired","value","keyboardType","inputRef","setState","validation","customValidation","containsError","focus","current","blur","clear","isFocused","getComponent","handleBlur","e","onBlur","handleFocus","onFocus","label","styles","asterik","marginLeft","undefined","labelStyle","wrapper","style","borderColor","red","borderWidth","inputText","textInputStyle","autoCapitalize","maxLength","errorWrapper","exclamation","underneathText","underneathTextStyle","validateEmail","email","test","validateNumber","number","validateDecimalNumber","endsWith","validatePhoneNumber","replace","extraValidation","StyleSheet","create","flexDirection","backgroundColor","borderRadius","paddingHorizontal","minHeight","alignItems","marginBottom","flex","paddingVertical","marginTop","color","height","width","justifyContent","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, {\n  forwardRef,\n  useState,\n  useImperativeHandle,\n  useRef,\n  RefObject,\n  ComponentProps,\n} from 'react';\nimport {\n  TextInput,\n  View,\n  StyleSheet,\n  Text,\n  NativeSyntheticEvent,\n  TextInputFocusEventData,\n  KeyboardTypeOptions,\n} from 'react-native';\n\nimport Label from '../components/Label';\nimport { colors } from '../colors';\n\ntype Validation = { status: boolean; message: string };\n\ninterface Props extends ComponentProps<typeof TextInput> {\n  textInputStyle?: object | object[];\n  children?: Element;\n  underneathText?: string;\n  underneathTextStyle?: object | object[];\n  label?: string;\n  labelStyle?: object | object[];\n  isRequired?: boolean;\n  value: string;\n  customValidation?: () => Validation;\n  asterik?: boolean;\n  ref: RefObject<TextInput>;\n}\n\nconst FormItem = forwardRef(({ children, ...props }: Props, ref: any) => {\n  const [hasError, setHasError] = useState({ status: false, message: '' });\n  const { isRequired, value, keyboardType } = props;\n  const inputRef: any = useRef();\n\n  useImperativeHandle(ref, () => ({\n    setState: () => {\n      let validation;\n      if (props.customValidation) validation = props.customValidation();\n      setHasError(containsError(keyboardType, isRequired!, value, validation));\n    },\n    focus: () => inputRef.current.focus(),\n    blur: () => inputRef.current.blur(),\n    clear: () => inputRef.current.clear(),\n    isFocused: () => inputRef.current.isFocused(),\n    getComponent: () => 'FormItem',\n  }));\n\n  const handleBlur = (e: NativeSyntheticEvent<TextInputFocusEventData>) => {\n    let validation;\n    if (props.customValidation) validation = props.customValidation();\n    setHasError(containsError(keyboardType, isRequired!, value, validation));\n    if (props.onBlur) props.onBlur(e);\n  };\n\n  const handleFocus = (e: NativeSyntheticEvent<TextInputFocusEventData>) => {\n    setHasError({ status: false, message: '' });\n    if (props.onFocus) props.onFocus(e);\n  };\n\n  return (\n    <>\n      {props.label && (\n        <Label\n          text={props.label}\n          style={[\n            styles.label,\n            !props.asterik ? { marginLeft: 4 } : undefined,\n            props.labelStyle,\n          ]}\n          asterik={props.asterik}\n        />\n      )}\n      <View\n        style={[\n          styles.wrapper,\n          props.style,\n          hasError.status\n            ? { borderColor: colors.red, borderWidth: 1 }\n            : undefined,\n        ]}\n      >\n        {\n          // this is separated from props because adding it causes TextInput to throw an error\n          children\n        }\n        <TextInput\n          {...props}\n          style={[styles.inputText, props.textInputStyle]}\n          ref={inputRef}\n          onBlur={handleBlur}\n          onFocus={handleFocus}\n          value={props.value}\n          autoCapitalize={\n            props.autoCapitalize ||\n            (props.keyboardType == 'email-address' ? 'none' : undefined)\n          }\n          maxLength={props.maxLength || 150}\n        />\n        {hasError.status && (\n          <View style={styles.errorWrapper}>\n            <Text style={styles.exclamation}>{'\\u0021'}</Text>\n          </View>\n        )}\n      </View>\n\n      {hasError.status && (\n        <Text style={[styles.underneathText, props.underneathTextStyle]}>\n          {props.underneathText || hasError.message}\n        </Text>\n      )}\n    </>\n  );\n});\n\nconst validateEmail = (email: string) => {\n  return /^\\S+@\\S+\\.\\S+$/.test(email);\n};\n\nconst validateNumber = (number: string) => {\n  return /^\\d+$/.test(number);\n};\n\nconst validateDecimalNumber = (number: string) => {\n  return /^\\d+.*\\d*/.test(number) && !number.endsWith('.');\n};\n\nconst validatePhoneNumber = (number: string) =>\n  /^\\+{0,1}\\d+$/.test(number.replace(/ /g, ''));\n\nexport const containsError = (\n  keyboardType: KeyboardTypeOptions = 'default',\n  isRequired: boolean,\n  value: string,\n  extraValidation?: Validation\n) => {\n  if (extraValidation && !extraValidation.status) {\n    return {\n      status: true,\n      message: extraValidation.message,\n    };\n  } else if (extraValidation && extraValidation.status) {\n    return { status: false, message: '' };\n  }\n\n  if (keyboardType == 'email-address' && !validateEmail(value))\n    return { status: true, message: 'Enter a valid email' };\n  if (isRequired && !value) return { status: true, message: 'Cannot be empty' };\n  if (\n    keyboardType == 'number-pad' ||\n    (keyboardType == 'numeric' && !validateNumber(value))\n  )\n    return { status: true, message: 'Invalid number' };\n  if (keyboardType == 'phone-pad' && !validatePhoneNumber(value))\n    return { status: true, message: 'Invalid phone number' };\n  if (keyboardType == 'decimal-pad' && !validateDecimalNumber(value))\n    return { status: true, message: 'Invalid number' };\n\n  return { status: false, message: '' };\n};\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderRadius: 5,\n    paddingHorizontal: 8,\n    minHeight: 48,\n    alignItems: 'center',\n    marginBottom: 24,\n  },\n  inputText: {\n    flex: 1,\n    paddingVertical: 8,\n  },\n  underneathText: {\n    marginTop: -24,\n    marginLeft: 8,\n    marginBottom: 24,\n    color: colors.red,\n  },\n  label: {\n    marginBottom: 2,\n  },\n  errorWrapper: {\n    height: 30,\n    width: 30,\n    borderRadius: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.red,\n  },\n  exclamation: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n});\n\nexport default FormItem;\n"]},"metadata":{},"sourceType":"module"}