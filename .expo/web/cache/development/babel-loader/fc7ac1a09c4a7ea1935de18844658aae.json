{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/mira/Desktop/hotelhub_frontend/src/views/CreateAccount/SignUpScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport DocForm from \"react-cross-form\";\nimport TextInput from \"./TextInput\";\nvar FORM_FIELDS = [{\n  key: \"firstName\",\n  label: \"First Name\",\n  placeholder: \"Type your name...\",\n  component: TextInput,\n  validators: {\n    presence: {\n      message: \"is required\"\n    },\n    length: {\n      minimum: 3\n    }\n  }\n}, {\n  key: \"email\",\n  label: \"Email\",\n  placeholder: \"Type your name...\",\n  component: TextInput,\n  validators: {\n    email: true\n  }\n}];\n\nvar Example = function (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  var _super = _createSuper(Example);\n\n  function Example(props) {\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      form: {\n        firstName: null,\n        email: null\n      },\n      isValid: false\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"onChange\",\n    value: function onChange(_ref) {\n      var updateData = _ref.updateData;\n      this.setState({\n        form: updateData\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          form = _this$state.form,\n          isFormValid = _this$state.isFormValid;\n      return React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }\n      }, React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }, \"Easy form validation example\"), React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }\n      }, React.createElement(DocForm, {\n        fields: FORM_FIELDS,\n        data: this.state.form,\n        onChange: this.onChange,\n        validateType: \"all\",\n        onValidateStateChanged: function onValidateStateChanged(_ref2) {\n          var isValid = _ref2.isValid;\n\n          _this2.setState({\n            isFormValid: isValid\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport { Example as default };\n;","map":{"version":3,"sources":["/home/mira/Desktop/hotelhub_frontend/src/views/CreateAccount/SignUpScreen.js"],"names":["React","DocForm","TextInput","FORM_FIELDS","key","label","placeholder","component","validators","presence","message","length","minimum","email","Example","props","state","form","firstName","isValid","onChange","bind","updateData","setState","isFormValid","Component"],"mappings":";;;;;;;;;;;;AA0EA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,SAAP;AAEA,IAAMC,WAAW,GAAG,CAClB;AACEC,EAAAA,GAAG,EAAE,WADP;AAEEC,EAAAA,KAAK,EAAE,YAFT;AAGEC,EAAAA,WAAW,EAAE,mBAHf;AAIEC,EAAAA,SAAS,EAAEL,SAJb;AAKEM,EAAAA,UAAU,EAAE;AAAEC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAwCC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX;AAAhD;AALd,CADkB,EAQlB;AACER,EAAAA,GAAG,EAAE,OADP;AAEEC,EAAAA,KAAK,EAAE,OAFT;AAGEC,EAAAA,WAAW,EAAE,mBAHf;AAIEC,EAAAA,SAAS,EAAEL,SAJb;AAKEM,EAAAA,UAAU,EAAE;AAAEK,IAAAA,KAAK,EAAE;AAAT;AALd,CARkB,CAApB;;IAiBqBC,O;;;;;AACpB,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,IAAI,EAAE;AACLC,QAAAA,SAAS,EAAE,IADN;AAELL,QAAAA,KAAK,EAAE;AAFF,OADM;AAKZM,MAAAA,OAAO,EAAE;AALG,KAAb;AAOA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB;AATkB;AAUlB;;;;WACD,wBAAsB;AAAA,UAAZC,UAAY,QAAZA,UAAY;AACrB,WAAKC,QAAL,CAAc;AAAEN,QAAAA,IAAI,EAAEK;AAAR,OAAd;AACA;;;WACA,kBAAS;AAAA;;AACP,wBAA8B,KAAKN,KAAnC;AAAA,UAAQC,IAAR,eAAQA,IAAR;AAAA,UAAcO,WAAd,eAAcA,WAAd;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,OAAD;AACE,QAAA,MAAM,EAAErB,WADV;AAEE,QAAA,IAAI,EAAE,KAAKa,KAAL,CAAWC,IAFnB;AAGE,QAAA,QAAQ,EAAE,KAAKG,QAHjB;AAIE,QAAA,YAAY,EAAC,KAJf;AAKE,QAAA,sBAAsB,EAAE,uCAAiB;AAAA,cAAdD,OAAc,SAAdA,OAAc;;AACvC,UAAA,MAAI,CAACI,QAAL,CAAc;AAAEC,YAAAA,WAAW,EAAEL;AAAf,WAAd;AACD,SAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAFF,CADF;AAgBD;;;;EAjCkCnB,KAAK,CAACyB,S;;SAAtBX,O;AAkCpB","sourcesContent":["// import React from 'react';\n// import { TextInput, View, StyleSheet, TouchableOpacity, Text } from 'react-native';\n\n// const SignUpScreen = ({ navigation }) => {\n//     const user = {}\n//   return (\n//     <View style={styles.container}>\n//       <TextInput\n//         //value={this.state.username}\n//         //onChangeText={(username) => this.setState({ username })}\n//         placeholder={'Email'}\n//         style={styles.input}\n//       />\n\n//       <TextInput\n//         //value={this.state.password}\n//         //onChangeText={(password) => this.setState({ password })}\n//         placeholder={'Password'}\n//         secureTextEntry={true}\n//         style={styles.input}\n//       />\n\n//       <TextInput\n//         //value={this.state.password}\n//         //onChangeText={(password) => this.setState({ password })}\n//         placeholder={'Retype password'}\n//         secureTextEntry={true}\n//         style={styles.input}\n//       />\n\n//         <TouchableOpacity \n//           //onPress={this.onLogin.bind(this)}\n//           style={styles.button}>\n//           <Text style={styles.inputText}>\n//             Create account\n//           </Text>\n//         </TouchableOpacity>\n//     </View>\n//   );\n// };\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     backgroundColor: '#ecf0f1',\n//   },\n//   input: {\n//     width: 200,\n//     height: 44,\n//     padding: 10,\n//     borderWidth: 1,\n//     borderColor: 'black',\n//     marginBottom: 10,\n//   },\n//   inputText: {\n//     color:\"white\"\n//   },\n//   button:{\n//     width:\"80%\",\n//     backgroundColor:\"#e34321\",\n//     borderRadius:25,\n//     height:50,\n//     width: 140,\n//     alignItems:\"center\",\n//     justifyContent:\"center\",\n//     marginTop:40,\n//     marginBottom:10\n//   },\n// });\n\n// export default SignUpScreen;\n\nimport React from \"react\";\nimport DocForm from \"react-cross-form\";\nimport TextInput from \"./TextInput\"; // You can use any component you want.\n\nconst FORM_FIELDS = [\n  {\n    key: \"firstName\",\n    label: \"First Name\",\n    placeholder: \"Type your name...\",\n    component: TextInput,\n    validators: { presence: { message: \"is required\" }, length: { minimum: 3 } }\n  },\n  {\n    key: \"email\",\n    label: \"Email\",\n    placeholder: \"Type your name...\",\n    component: TextInput,\n    validators: { email: true }\n  }\n];\n\nexport default class Example extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tform: {\n\t\t\t\tfirstName: null,\n\t\t\t\temail: null\n\t\t\t},\n\t\t\tisValid: false\n\t\t};\n\t\tthis.onChange = this.onChange.bind(this)\n\t}\n\tonChange({updateData}){\n\t\tthis.setState({ form: updateData })\n\t}\n  render() {\n    const { form, isFormValid } = this.state;\n    return (\n      <div>\n        <h2>Easy form validation example</h2>\n        <form>\n        <DocForm\n          fields={FORM_FIELDS}\n          data={this.state.form}\n          onChange={this.onChange}\n          validateType=\"all\"\n          onValidateStateChanged={({ isValid }) => {\n            this.setState({ isFormValid: isValid });\n          }}\n        />\n        </form>\n      </div>\n    );\n  }\n};"]},"metadata":{},"sourceType":"module"}